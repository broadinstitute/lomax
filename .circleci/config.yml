# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
# See also https://circleci.com/docs/2.0/collect-test-data/#mochajs for info on steps
#
version: 2
jobs:
  build:
    environment:
      NODE_ENV: development
    docker:
      # This Cloud Function uses the Node.js 6 runtime
      - image: circleci/node:8.15.0

    # all the Node.js code is in the subdirectory "function". Set this as the default working directory
    # but make sure to override the working dir for steps like checkout.
    working_directory: ~/repo/function

    steps:
      - checkout:
          path: ~/repo
      
      # Update npm
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'

      - restore_cache: # special step to restore the dependency cache 
          key: dependency-cache-{{ checksum "package.json" }}
      
      - run:
          name: install dependencies
          command: npm install

      - run: npm install mocha-junit-reporter # just for CircleCI
      
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      
      - run: mkdir reports

      # Run mocha
      - run:
          name: npm test
          command: |
              ./node_modules/.bin/nyc ./node_modules/.bin/mocha  ./test --recursive --timeout=10000 --exit --reporter mocha-junit-reporter --reporter-options mochaFile=reports/mocha/test-results.xml
          when: always

      # Run eslint
      - run:
          name: eslint
          command: |
              ./node_modules/.bin/eslint ./ --format junit --output-file ./reports/eslint/eslint.xml
          when: always

      # Generate code coverage reports
      - run:
          name: code coverage report
          command: './node_modules/.bin/nyc report --reporter=lcov --report-dir=reports/coverage'
          when: always

      - run: npm install codecov # just for CircleCI

      - run:
          name: codecov upload
          command: './node_modules/.bin/codecov'

      # Upload results to Circle
      - store_test_results:
          path: reports

      - store_artifacts:
          path: ./reports
